2017-08-28 00:33:32,011 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 00:33:32,399 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 00:33:32,409 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:33:32,441 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170812
     
2017-08-28 00:34:05,662 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:34:05,756 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 00:34:35,221 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:34:35,319 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 00:35:03,722 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:35:03,821 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170812,etl_time=20170812)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170812
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 00:36:58,659 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:36:58,734 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170811,etl_time=20170812)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170811
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 00:38:56,657 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:38:56,732 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170810,etl_time=20170812)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170810
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 00:40:45,673 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:40:45,752 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170809,etl_time=20170812)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170809
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 00:42:40,090 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:42:40,099 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170813.lock
2017-08-28 00:54:58,038 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 00:54:58,415 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 00:54:58,426 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:54:58,461 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170813
     
2017-08-28 00:55:20,792 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:55:20,885 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 00:55:49,335 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:55:49,433 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 00:56:17,913 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:56:18,012 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170813,etl_time=20170813)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170813
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 00:58:11,156 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 00:58:11,233 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170812,etl_time=20170813)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170812
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:00:06,660 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:00:06,737 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170811,etl_time=20170813)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170811
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:01:55,748 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:01:55,826 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170810,etl_time=20170813)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170810
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:03:44,927 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:03:44,937 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170814.lock
2017-08-28 01:05:04,184 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 01:05:04,552 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 01:05:04,562 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:05:04,594 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170814
     
2017-08-28 01:05:35,852 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:05:35,946 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 01:06:04,276 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:06:04,375 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 01:06:32,745 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:06:32,844 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170814,etl_time=20170814)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170814
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:08:26,014 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:08:26,092 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170813,etl_time=20170814)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170813
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:10:18,431 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:10:18,509 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170812,etl_time=20170814)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170812
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:12:04,291 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:12:04,371 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170811,etl_time=20170814)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170811
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:13:50,377 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:13:50,386 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170815.lock
2017-08-28 01:18:57,763 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 01:18:58,149 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 01:18:58,182 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:18:58,217 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170815
     
2017-08-28 01:19:30,579 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:19:30,661 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 01:19:59,129 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:19:59,228 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 01:20:27,663 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:20:27,762 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170815,etl_time=20170815)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170815
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:22:20,242 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:22:20,319 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170814,etl_time=20170815)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170814
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:24:10,452 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:24:10,529 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170813,etl_time=20170815)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170813
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:26:02,694 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:26:02,771 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170812,etl_time=20170815)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170812
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:27:51,897 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:27:51,908 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170816.lock
2017-08-28 01:34:38,454 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 01:34:38,839 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 01:34:38,849 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:34:38,881 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170816
     
2017-08-28 01:34:57,976 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:34:58,069 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 01:35:27,448 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:35:27,547 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 01:35:54,973 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:35:55,072 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170816,etl_time=20170816)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170816
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:37:48,087 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:37:48,165 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170815,etl_time=20170816)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170815
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:39:43,319 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:39:43,396 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170814,etl_time=20170816)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170814
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:41:29,253 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:41:29,324 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170813,etl_time=20170816)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170813
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 01:43:20,124 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 01:43:20,139 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170817.lock
2017-08-28 02:33:44,844 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 02:33:45,230 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 02:33:45,240 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 02:33:45,273 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170817
     
2017-08-28 02:34:17,672 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 02:34:17,724 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 02:34:47,214 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 02:34:47,313 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 02:35:15,810 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 02:35:15,909 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170817,etl_time=20170817)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170817
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 02:37:11,938 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 02:37:12,013 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170816,etl_time=20170817)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170816
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 02:39:05,399 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 02:39:05,478 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170815,etl_time=20170817)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170815
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 02:40:55,305 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 02:40:55,383 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170814,etl_time=20170817)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170814
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 02:42:36,184 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 02:42:36,194 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170818.lock
2017-08-28 09:47:11,656 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 09:47:12,362 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 09:47:12,373 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:47:12,415 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170818
     
2017-08-28 09:47:32,861 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:47:32,953 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 09:48:01,483 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:48:01,574 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 09:48:30,138 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:48:30,237 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170818,etl_time=20170818)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170818
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 09:50:24,614 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:50:24,703 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170817,etl_time=20170818)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170817
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 09:52:20,713 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:52:20,792 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170816,etl_time=20170818)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170816
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 09:54:08,748 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:54:08,824 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170815,etl_time=20170818)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170815
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 09:55:52,652 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:55:52,660 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170819.lock
2017-08-28 09:56:08,015 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 09:56:08,381 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 09:56:08,392 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:56:08,431 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170819
     
2017-08-28 09:56:27,678 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:56:27,770 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 09:56:57,154 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:56:57,249 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 09:57:25,659 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:57:25,758 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170819,etl_time=20170819)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170819
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 09:59:21,466 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 09:59:21,540 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170818,etl_time=20170819)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170818
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:01:11,152 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:01:11,231 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170817,etl_time=20170819)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170817
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:03:00,687 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:03:00,755 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170816,etl_time=20170819)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170816
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:04:47,781 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:04:47,788 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170820.lock
2017-08-28 10:08:07,309 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 10:08:07,691 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 10:08:07,701 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:08:07,746 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170820
     
2017-08-28 10:08:29,003 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:08:29,093 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 10:08:57,485 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:08:57,583 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 10:09:26,004 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:09:26,103 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170820,etl_time=20170820)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170820
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:11:25,326 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:11:25,405 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170819,etl_time=20170820)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170819
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:13:20,204 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:13:20,282 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170818,etl_time=20170820)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170818
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:15:09,832 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:15:09,904 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170817,etl_time=20170820)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170817
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:17:00,335 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:17:00,345 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170821.lock
2017-08-28 10:19:45,082 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 10:19:45,460 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 10:19:45,493 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:19:45,552 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170821
     
2017-08-28 10:20:17,787 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:20:17,879 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 10:20:47,361 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:20:47,460 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 10:21:15,900 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:21:15,997 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170821,etl_time=20170821)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170821
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:23:12,497 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:23:12,568 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170820,etl_time=20170821)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170820
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:25:07,862 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:25:07,930 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170819,etl_time=20170821)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170819
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:27:03,799 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:27:03,878 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170818,etl_time=20170821)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170818
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 10:28:54,263 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 10:28:54,271 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170822.lock
2017-08-28 11:13:00,797 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 11:13:01,190 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 11:13:01,200 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:13:01,252 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170822
     
2017-08-28 11:13:32,553 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:13:32,646 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 11:14:02,191 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:14:02,284 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 11:14:30,825 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:14:30,924 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170822,etl_time=20170822)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170822
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:16:10,353 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:16:10,433 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170821,etl_time=20170822)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170821
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:18:02,392 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:18:02,468 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170820,etl_time=20170822)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170820
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:19:56,009 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:19:56,085 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170819,etl_time=20170822)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170819
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:21:46,644 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:21:46,652 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170823.lock
2017-08-28 11:23:09,277 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 11:23:09,666 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 11:23:09,697 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:23:09,731 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170823
     
2017-08-28 11:23:30,966 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:23:31,059 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 11:23:59,444 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:23:59,544 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 11:24:27,934 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:24:28,033 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170823,etl_time=20170823)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170823
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:24:51,246 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:24:51,331 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170822,etl_time=20170823)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170822
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:26:20,293 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:26:20,370 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170821,etl_time=20170823)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170821
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:28:09,757 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:28:09,825 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170820,etl_time=20170823)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170820
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:29:56,120 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:29:56,129 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170824.lock
2017-08-28 11:36:37,339 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 11:36:37,734 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 11:36:37,745 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:36:37,789 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170824
     
2017-08-28 11:36:58,983 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:36:59,076 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 11:37:28,498 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:37:28,597 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 11:37:57,075 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:37:57,173 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170824,etl_time=20170824)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170824
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:38:49,375 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:38:49,452 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170823,etl_time=20170824)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170823
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:39:09,533 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:39:09,618 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170822,etl_time=20170824)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170822
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:40:34,360 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:40:34,439 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170821,etl_time=20170824)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170821
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:42:20,501 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:42:20,510 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170825.lock
2017-08-28 11:50:48,322 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 11:50:48,707 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 11:50:48,740 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:50:48,772 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170825
     
2017-08-28 11:51:21,112 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:51:21,201 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 11:51:50,716 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:51:50,815 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 11:52:19,307 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:52:19,406 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170825,etl_time=20170825)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170825
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:54:16,236 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:54:16,313 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170824,etl_time=20170825)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170824
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:55:08,395 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:55:08,475 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170823,etl_time=20170825)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170823
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:55:29,419 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:55:29,501 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170822,etl_time=20170825)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170822
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 11:56:57,347 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 11:56:57,356 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170826.lock
2017-08-28 12:38:40,107 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 12:38:40,489 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 12:38:40,500 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 12:38:40,535 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170826
     
2017-08-28 12:38:59,774 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 12:38:59,865 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 12:39:28,273 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 12:39:28,371 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 12:39:56,764 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 12:39:56,863 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170826,etl_time=20170826)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170826
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 12:41:54,742 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 12:41:54,821 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170825,etl_time=20170826)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170825
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 12:43:49,381 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 12:43:49,467 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170824,etl_time=20170826)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170824
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 12:44:43,643 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 12:44:43,722 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170823,etl_time=20170826)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170823
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 12:45:03,783 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 12:45:03,793 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170827.lock
2017-08-28 13:46:42,018 [INFO] {hqltools.py:356} 程序开始执行
2017-08-28 13:46:42,401 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-28 13:46:42,411 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 13:46:42,445 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170827
     
2017-08-28 13:47:13,807 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 13:47:13,900 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 13:47:42,372 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 13:47:42,468 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-28 13:48:10,938 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 13:48:11,037 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170827,etl_time=20170827)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170827
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 13:50:10,552 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 13:50:10,627 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170826,etl_time=20170827)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170826
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 13:52:03,593 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 13:52:03,650 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170825,etl_time=20170827)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170825
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 13:53:54,488 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 13:53:54,567 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170824,etl_time=20170827)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170824
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-28 13:54:47,208 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-28 13:54:47,215 [INFO] {hqltools.py:378} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170828.lock
2017-08-29 14:39:53,154 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 14:39:54,069 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 14:39:54,079 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 14:39:54,109 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170725
     
2017-08-29 14:40:26,421 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 14:40:26,515 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 14:40:54,968 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 14:40:55,068 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 14:41:23,534 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 14:41:23,634 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170725,etl_time=20170725)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170725
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 14:43:16,846 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 14:43:16,924 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170724,etl_time=20170725)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170724
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 14:45:13,689 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 14:45:13,768 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170723,etl_time=20170725)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170723
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 14:47:12,618 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 14:47:12,695 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170722,etl_time=20170725)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170722
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 14:49:06,519 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 14:49:06,530 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170726.lock
2017-08-29 15:21:15,388 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 15:21:15,780 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 15:21:15,813 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:21:15,849 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170724
     
2017-08-29 15:21:37,157 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:21:37,252 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 15:22:05,759 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:22:05,856 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 15:22:34,358 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:22:34,458 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170724,etl_time=20170724)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170724
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 15:24:27,121 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:24:27,200 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170723,etl_time=20170724)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170723
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 15:26:23,580 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:26:23,658 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170722,etl_time=20170724)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170722
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 15:28:11,803 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:28:11,875 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170721,etl_time=20170724)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170721
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 15:30:03,275 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:30:03,284 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170725.lock
2017-08-29 15:30:39,507 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 15:30:39,885 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 15:30:39,895 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:30:39,928 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170723
     
2017-08-29 15:31:13,386 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:31:13,480 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 15:31:43,006 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:31:43,106 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 15:32:11,635 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:32:11,731 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170723,etl_time=20170723)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170723
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 15:34:07,607 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:34:07,684 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170722,etl_time=20170723)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170722
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 15:35:59,134 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:35:59,212 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170721,etl_time=20170723)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170721
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 15:37:47,645 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:37:47,724 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170720,etl_time=20170723)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170720
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 15:39:38,918 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 15:39:38,926 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170724.lock
2017-08-29 16:49:07,942 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 16:49:08,332 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 16:49:08,342 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 16:49:08,375 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170722
     
2017-08-29 16:49:41,717 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 16:49:41,810 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 16:50:11,254 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 16:50:11,354 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 16:50:39,762 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 16:50:39,862 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170722,etl_time=20170722)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170722
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 16:52:35,612 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 16:52:35,690 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170721,etl_time=20170722)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170721
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 16:54:23,860 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 16:54:23,939 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170720,etl_time=20170722)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170720
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 16:56:13,331 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 16:56:13,409 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170719,etl_time=20170722)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170719
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 16:58:06,764 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 16:58:06,774 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170723.lock
2017-08-29 17:07:58,518 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 17:07:58,902 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 17:07:58,913 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:07:58,944 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170721
     
2017-08-29 17:08:30,277 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:08:30,371 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:09:00,035 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:09:00,135 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:09:28,859 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:09:28,960 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170721,etl_time=20170721)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170721
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:11:24,387 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:11:24,459 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170720,etl_time=20170721)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170720
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:13:17,776 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:13:17,848 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170719,etl_time=20170721)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170719
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:15:08,513 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:15:08,590 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170718,etl_time=20170721)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170718
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:16:57,511 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:16:57,518 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170722.lock
2017-08-29 17:19:20,893 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 17:19:21,283 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 17:19:21,316 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:19:21,349 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170720
     
2017-08-29 17:19:54,746 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:19:54,839 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:20:24,327 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:20:24,428 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:20:52,897 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:20:52,997 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170720,etl_time=20170720)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170720
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:22:49,240 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:22:49,323 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170719,etl_time=20170720)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170719
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:24:40,799 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:24:40,878 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170718,etl_time=20170720)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170718
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:26:25,024 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:26:25,103 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170717,etl_time=20170720)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170717
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:28:17,595 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:28:17,603 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170721.lock
2017-08-29 17:29:18,639 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 17:29:19,018 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 17:29:19,051 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:29:19,081 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170719
     
2017-08-29 17:29:51,300 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:29:51,394 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:30:20,813 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:30:20,913 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:30:48,440 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:30:48,539 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170719,etl_time=20170719)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170719
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:32:45,052 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:32:45,131 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170718,etl_time=20170719)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170718
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:34:34,567 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:34:34,649 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170717,etl_time=20170719)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170717
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:36:19,711 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:36:19,792 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170716,etl_time=20170719)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170716
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:38:15,242 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:38:15,249 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170720.lock
2017-08-29 17:42:15,031 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 17:42:15,421 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 17:42:15,431 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:42:15,463 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170718
     
2017-08-29 17:42:48,956 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:42:49,050 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:43:18,584 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:43:18,684 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:43:47,074 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:43:47,173 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170718,etl_time=20170718)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170718
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:45:37,911 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:45:37,965 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170717,etl_time=20170718)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170717
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:47:28,205 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:47:28,284 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170716,etl_time=20170718)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170716
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:49:17,854 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:49:17,929 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170715,etl_time=20170718)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170715
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 17:51:09,996 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:51:10,007 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170719.lock
2017-08-29 17:57:36,829 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 17:57:37,221 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 17:57:37,232 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:57:37,280 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170717
     
2017-08-29 17:57:58,770 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:57:58,857 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:58:27,518 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:58:27,618 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 17:58:56,293 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 17:58:56,394 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170717,etl_time=20170717)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170717
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 18:00:45,941 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 18:00:46,016 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170716,etl_time=20170717)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170716
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 18:02:39,523 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 18:02:39,600 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170715,etl_time=20170717)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170715
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 18:04:30,065 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 18:04:30,143 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170714,etl_time=20170717)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170714
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 18:06:21,095 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 18:06:21,107 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170718.lock
2017-08-29 19:03:04,799 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 19:03:05,569 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 19:03:05,601 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:03:05,641 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170716
     
2017-08-29 19:03:57,022 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:03:57,116 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 19:04:32,055 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:04:32,154 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 19:05:10,034 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:05:10,135 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170716,etl_time=20170716)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170716
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 19:09:16,462 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:09:16,524 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170715,etl_time=20170716)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170715
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 19:14:23,133 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:14:23,201 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170714,etl_time=20170716)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170714
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 19:19:18,068 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:19:18,142 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170713,etl_time=20170716)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170713
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 19:24:37,786 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:24:37,796 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170717.lock
2017-08-29 19:25:11,808 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 19:25:12,185 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 19:25:12,196 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:25:12,225 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170715
     
2017-08-29 19:26:30,841 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:26:30,937 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 19:27:12,385 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:27:12,482 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 19:27:57,301 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:27:57,401 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170715,etl_time=20170715)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170715
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 19:32:16,485 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:32:16,628 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170714,etl_time=20170715)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170714
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 19:37:31,411 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:37:31,472 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170713,etl_time=20170715)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170713
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 19:43:38,207 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:43:38,288 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170712,etl_time=20170715)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170712
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 19:51:31,416 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:51:31,471 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170716.lock
2017-08-29 19:53:44,241 [INFO] {hqltools.py:362} 程序开始执行
2017-08-29 19:53:45,150 [INFO] {hqltools.py:50} Query sql is:
create table if not exists s_tmp_dwa_diff_online_media_user_d1
            (
                acct_start_time    int
                ,acct_stop_time    int
                ,client_ip_address string
                ,user_name         string
            )
            stored as rcfile
            LOCATION '/user/hive/TEMP/s_tmp_dwa_diff_online_media_user_d1'
            
2017-08-29 19:53:45,181 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 19:53:45,213 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
    select unix_timestamp(acct_start_time) as acct_start_time
         ,unix_timestamp(acct_stop_time) as acct_stop_time
         ,client_ip_address
         ,user_name
     from dwd_dr_brd_expend
    where pt_time = 20170714
     
2017-08-29 20:00:11,758 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 20:00:11,853 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_start_time order by acct_stop_time desc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 20:03:45,241 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 20:03:45,341 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table s_tmp_dwa_diff_online_media_user_d1
      select acct_start_time,acct_stop_time,client_ip_address,user_name
        from (select t.*,row_number()over(partition by user_name,acct_stop_time order by acct_start_time asc) rn
                from s_tmp_dwa_diff_online_media_user_d1 t
                 ) t
        where rn = 1
            
2017-08-29 20:07:07,891 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 20:07:07,981 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170714,etl_time=20170714)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170714
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 20:15:50,997 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 20:15:51,075 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170713,etl_time=20170714)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170713
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 20:24:03,013 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 20:24:03,091 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170712,etl_time=20170714)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170712
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 20:31:52,583 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 20:31:52,656 [INFO] {hqltools.py:50} Query sql is:
insert overwrite table dwa_diff_online_media_user_d partition(pt_time=20170711,etl_time=20170714)
    select
       t2.domain_name as std_online_media_code
       ,'' as std_online_media_name
       ,t2.std_device_cate_code
       ,'' as std_device_cate_name
       ,hour(from_unixtime(cast(t2.access_time as int)))
       ,t1.user_name as login_name
       ,from_unixtime(cast(t2.access_time as int))
       ,from_unixtime(cast(t1.acct_start_time as int))
       ,from_unixtime(cast(t1.acct_stop_time as int))
       ,from_unixtime(unix_timestamp()) etl_date
     from s_tmp_dwa_diff_online_media_user_d1 t1 --在线记录
         ,(select access_time
                 ,source_ip
                 ,domain_name
                 ,(case when user_agent like '%Android%' then 'android'
                        when user_agent like '%Windows NT%' then 'windows'
                        when user_agent like '%iPhone%' then 'iphone'
                        when user_agent like '%iPad%' then 'ipad'
                        when user_agent like '%Mac%' then 'mac'
                     else '' end ) std_device_cate_code
             from dwd_uplink_data
            where pt_time = 20170711
           ) t2 --上行数据
    where t2.source_ip = t1.client_ip_address
      and t1.acct_start_time <= t2.access_time
      and t1.acct_stop_time >= t2.access_time
     
2017-08-29 20:35:18,501 [INFO] {hqltools.py:52} Successful implementation of this Sql
2017-08-29 20:35:18,511 [INFO] {hqltools.py:384} 程序执行成功. 删除锁文件 /AiInsight/logs/DWA_DIFF_ONLINE_MEDIA_USER_D_20170715.lock
