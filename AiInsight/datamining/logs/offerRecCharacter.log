2018-01-03 17:10:41,224 [INFO] {offerRecTableDdl.py:49} 套餐推荐特征表定义...
2018-01-03 17:10:41,225 [INFO] {hiveUtils.py:78} Executive sql is:
 drop table tmp_offerrec_offers_dims
2018-01-03 17:10:41,326 [INFO] {hiveUtils.py:80} Successful implementation of this sql
2018-01-03 17:10:41,326 [INFO] {hiveUtils.py:78} Executive sql is:

                    drop table tmp_valid_ord_offer
2018-01-03 17:10:41,499 [INFO] {hiveUtils.py:80} Successful implementation of this sql
2018-01-03 17:10:41,499 [INFO] {hiveUtils.py:78} Executive sql is:

                    drop table tmp_valid_ord_prod
2018-01-03 17:10:41,666 [INFO] {hiveUtils.py:80} Successful implementation of this sql
2018-01-03 17:10:41,666 [INFO] {hiveUtils.py:78} Executive sql is:

                    drop table tmp_oferrec_offers
2018-01-03 17:10:41,848 [INFO] {hiveUtils.py:80} Successful implementation of this sql
2018-01-03 17:10:41,848 [INFO] {hiveUtils.py:78} Executive sql is:

                    drop table tmp_offerrec_review
2018-01-03 17:10:42,039 [INFO] {hiveUtils.py:80} Successful implementation of this sql
2018-01-03 17:10:42,039 [INFO] {hiveUtils.py:78} Executive sql is:

                    drop table tmp_offerrec_tv
2018-01-03 17:10:42,213 [INFO] {hiveUtils.py:80} Successful implementation of this sql
2018-01-03 17:10:42,213 [INFO] {hiveUtils.py:78} Executive sql is:

                    drop table tmp_offerrec_review
2018-01-03 17:10:42,315 [INFO] {hiveUtils.py:80} Successful implementation of this sql
2018-01-03 17:10:42,315 [INFO] {hiveUtils.py:78} Executive sql is:

                    drop table tmp_offerrec_vod
               
2018-01-03 17:10:42,403 [INFO] {hiveUtils.py:80} Successful implementation of this sql
2018-01-03 17:10:42,403 [INFO] {hiveUtils.py:67} Executive sql is:
create table if not exists tmp_offerrec_offers_dims
                           (
                               OFFER_ID             STRING
                            )
                            stored as orcfile
                            LOCATION '/user/hive/TEMP/tmp_offerrec_offers_dims'
                
2018-01-03 17:10:42,581 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:10:42,582 [INFO] {hiveUtils.py:67} Executive sql is:
create table if not exists tmp_valid_ord_offer
                       (
                             OFFER_ID             STRING,
                             OFFER_INST_ID        STRING,
                             CREATE_DATE          STRING
                          )
                          stored as orcfile
                          LOCATION '/user/hive/TEMP/tmp_valid_ord_offer'
                        
2018-01-03 17:10:42,734 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:10:42,734 [INFO] {hiveUtils.py:67} Executive sql is:
create table if not exists tmp_valid_ord_prod
                         (
                                prod_inst_id             STRING,
                                srvpkg_id                STRING,
                                OFFER_INST_ID            STRING
                             )
                             stored as orcfile
                             LOCATION '/user/hive/TEMP/tmp_valid_ord_prod'
                           
2018-01-03 17:10:42,883 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:10:42,883 [INFO] {hiveUtils.py:67} Executive sql is:
create table if not exists tmp_oferrec_offers
                    (
                           prod_inst_id             STRING,
                           srvpkg_id                STRING,
                           offer_id                 STRING,
                           create_date              STRING
                        )
                        stored as orcfile
                        LOCATION '/user/hive/TEMP/tmp_oferrec_offers'
                      
2018-01-03 17:10:43,099 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:10:43,099 [INFO] {hiveUtils.py:67} Executive sql is:
create table if not exists tmp_offerrec_vod
                       (
                           prod_inst_id           string,
                           VOD_NUM           string,
                           VOD_DAYS          string,
                           VOD_FEE           string
                        )
                        stored as orcfile
                        LOCATION '/user/hive/TEMP/tmp_offerrec_vod'
                        
2018-01-03 17:10:43,274 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:10:43,274 [INFO] {hiveUtils.py:67} Executive sql is:
create table if not exists tmp_offerrec_tv
                     (
                         prod_inst_id      string,
                         TV_NUM            string,
                         TV_DAYS           string
                      )
                      stored as orcfile
                      LOCATION '/user/hive/TEMP/tmp_offerrec_tv'
                      
2018-01-03 17:10:43,452 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:10:43,452 [INFO] {hiveUtils.py:67} Executive sql is:
create table if not exists tmp_offerrec_review
                    (
                        prod_inst_id         string,
                        REVIEW_NUM           string,
                        REVIEW_DAYS          string
                     )
                     stored as orcfile
                     LOCATION '/user/hive/TEMP/tmp_offerrec_review'
                     
2018-01-03 17:10:43,614 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:10:43,614 [INFO] {hiveUtils.py:67} Executive sql is:
create table if not exists dwa_offer_rec_character (    
                             PROD_INST_ID           string,
                             is_atv                 string,
                             is_dtv                 string,
                             is_dftv                string,
                             is_ditv                string,
                             is_lan                 string,
                             OFFER_ID               string,        
                             prod_id                string,
                             tv_nums                string,
                             tv_days                string,
                             vod_num                string,
                             vod_days               string,
                             vod_fee                string,
                             review_days            string,
                             review_num             string,
                             data_source_cd         string,
                             ETL_DATE               string
                        ) PARTITIONED BY (pt_mon string)
                          STORED AS RCFILE
                          LOCATION '/user/hive/warehouse/test.db/dwa_offer_rec_character'
                      
2018-01-03 17:10:43,780 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:10:43,780 [INFO] {hiveUtils.py:67} Executive sql is:
 insert overwrite table tmp_offerrec_offers_dims
                   select distinct product_item_id offer_id
                   from stg_up_product_item
                   where to_date(valid_date) < '2017-06-30'
                     and to_date(EXPIRE_DATE) > '2017-06-30'
                     and item_type='OFFER_PLAN'
            
2018-01-03 17:11:08,645 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:11:08,645 [INFO] {hiveUtils.py:67} Executive sql is:
insert into table tmp_valid_ord_offer
                  select distinct offer_id
                                 ,offer_inst_id
                                 ,create_date
                  from stg_h_ins_offer
                  where own_corp_org_id = '3002'
                    and pt_year = '2017'
                    and from_unixtime(unix_timestamp(create_date),'yyyy-MM-dd') <=
                        '2017-06-30'
                   
2018-01-03 17:11:35,738 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:11:35,738 [INFO] {hiveUtils.py:67} Executive sql is:
insert into table tmp_valid_ord_prod
                      select DISTINCT prod_inst_id
                                ,srvpkg_id
                                ,offer_inst_id
                         from stg_h_ins_srvpkg
                         where pt_year = '2017' and from_unixtime(unix_timestamp(create_date),'yyyy-MM-dd')
                            <='2017-06-30'
                           and state = '1'
                           and prod_inst_id is not null
                           and prod_service_id in ('1002','1003','1005','1006','1008')
                   
2018-01-03 17:12:34,338 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:12:34,338 [INFO] {hiveUtils.py:67} Executive sql is:
insert into table tmp_oferrec_offers
                      select DISTINCT t2.prod_inst_id
                             ,t1.offer_id
                             ,t2.srvpkg_id
                             ,t1.create_date
                      from tmp_valid_ord_offer t1
                      left join tmp_valid_ord_prod t2
                      on t1.offer_inst_id = t2.offer_inst_id
                      where t2.prod_inst_id is not null
                   
2018-01-03 17:14:06,021 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:14:06,021 [INFO] {hiveUtils.py:67} Executive sql is:
insert overwrite table tmp_offerrec_review
                  select user_id PROD_INST_ID
                         ,count(user_id) REVIEW_NUM
                         ,count(distinct substr(start_time,1,10)) REVIEW_DAYS
                  from stg_dr_ismp_yyyymm
                  where pt_mon = '201706'
                  and data_source_cd = 'VOD'
                  group by user_id
                
2018-01-03 17:17:35,864 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:17:35,864 [INFO] {hiveUtils.py:67} Executive sql is:
insert overwrite table tmp_offerrec_vod
                  select user_id PROD_INST_ID
                         ,count(user_id) VOD_NUM
                         ,COUNT(DISTINCT substr(start_time,1,10)) VOD_DAYS
                         ,sum(charge1)
                  from stg_dr_ismp_yyyymm
                  where pt_mon = '201706'
                   and data_source_cd <> 'VOD'
                   group by user_id
                   
2018-01-03 17:21:04,709 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:21:04,710 [INFO] {hiveUtils.py:67} Executive sql is:
insert overwrite table tmp_offerrec_tv
                  select user_id PROD_INST_ID
                         ,count(1) TV_NUM
                         ,count(distinct from_unixtime(unix_timestamp(time,'yyyy-MM-dd'),'yyyy-MM-dd')) TV_DAYS
                   from dwd_ter_service
                   where pt_mon = '201706'
                     and OWN_CORP_STD_ORG_CODE='100901'
                   group by user_id
                 
2018-01-03 17:22:11,749 [INFO] {hiveUtils.py:69} Successful implementation of this sql
2018-01-03 17:22:11,750 [INFO] {hiveUtils.py:67} Executive sql is:
insert overwrite table dwa_offer_rec_character partition (pt_mon ='201706')
                  select distinct t.prod_inst_id
                         ,t4.is_atv
                         ,t4.is_dtv
                         ,t4.is_dftv
                         ,t4.is_ditv
                         ,t4.is_lan
                         ,t.offer_id
                         ,t.srvpkg_id
                         ,nvl(t1.tv_num,0)
                         ,nvl(t1.tv_days,0)
                         ,nvl(t2.vod_num,0)
                         ,nvl(t2.vod_days,0)
                         ,nvl(t2.vod_fee,0)
                         ,nvl(t3.review_num,0)
                         ,nvl(t3.review_days,0)
                         ,'TZ' data_source_cd
                         ,CURRENT_TIMESTAMP  
                  from  tmp_oferrec_offers t
                  left join tmp_offerrec_tv t1 on t.prod_inst_id = t1.prod_inst_id
                  left join tmp_offerrec_vod t2 on t.prod_inst_id = t2.prod_inst_id
                  left join tmp_offerrec_review t3 on t.prod_inst_id = t3.prod_inst_id 
                  left join dwa_fact_ins_prod t4 on t.prod_inst_id = t4.prod_inst_id 
                      and t4.own_corp_std_org_code = '100901' and t4.pt_time = '20170630'
                      and t4.is_vaild1 = '1' and t4.prod_inst_id is not null
                  left join  tmp_offerrec_offers_dims t5 on t.offer_id = t5.offer_id and t5.offer_id is not null
                  
2018-01-03 17:23:19,265 [INFO] {hiveUtils.py:69} Successful implementation of this sql
